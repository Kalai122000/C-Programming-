#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

void insertAtEnd(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
      *head = newNode;
      return;
    }
    struct Node* temp = *head;
    while (temp->next != NULL) {
      temp = temp->next;
    }
    temp->next = newNode;
}
void deleteKey(struct Node** head, int key) {
    struct Node* temp = *head;
    struct Node* prev = NULL;

    if (temp != NULL && temp->data == key) {
        *head = temp->next; 
        return;
    }
    while (temp != NULL && temp->next != NULL) {
        prev = temp;
        temp = temp->next;
    }
    prev->next = temp->next;
}
void print(struct Node* head) {
    struct Node* temp = head;
    if(temp == NULL){
      printf("The linked list is empty.");
    }
    else{
      while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
      }
      printf("NULL");
    }
    
}
int main() {
    struct Node* head = NULL;

    int n;
    scanf("%d",&n);

    for(int i =0;i<n;i++){
        int k;
        scanf("%d",&k);
        insertAtEnd(&head, k);    
    }
    printf("Original linked list:\n");
    print(head);
    printf("\nEnter the key to delete:");
    int k;
    scanf("%d",&k);
    deleteKey(&head, k);
    printf("\n Linked list after deletion:\n");
    print(head);
}
