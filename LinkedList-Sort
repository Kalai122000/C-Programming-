#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}
void insertAtEnd(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode;
        return;
    }
    struct Node* temp = *head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = newNode;
}
void sort(struct Node** head) {
    if (*head == NULL || (*head)->next == NULL) {
        return; 
    }

    struct Node* curr = NULL;
    struct Node* index = NULL;
    int temp;

    for (curr = *head; curr != NULL; curr = curr->next) {
        for (index = curr->next; index != NULL; index = index->next) {
            if (curr->data > index->data) {
                
                temp = curr->data;
                curr->data = index->data;
                index->data = temp;
            }
        }
    }
}

void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}
int main() {
    struct Node* head = NULL;

    int n;
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        int k;
        scanf("%d", &k);
        insertAtEnd(&head, k);
    }
   printList(head);
    sort(&head);
    printList(head);
    
    return 0;
}
